<Window x:Name="PropertyDialog1" x:Class="Snapshot.CPropertyDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Snapshot"
             mc:Ignorable="d" 
             FontSize="14" WindowStyle="ToolWindow" ResizeMode="NoResize" SizeToContent="WidthAndHeight" ShowInTaskbar="False" Title="Property Settings" Topmost="True" Closing="PropertyDialog1_Closing" Loaded="PropertyDialog1_Loaded">
    <Window.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Common.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <local:StringToXIntConverter x:Key="Convert_str_xint"/>

            <Image Source="resource/locked.png" x:Key="imgLocked" />
            <Image Source="resource/unlocked.png"  x:Key="imgUnlocked" />

            <Style TargetType="Button" x:Key="sBtnClearCount" BasedOn="{StaticResource sButtonDefault}">
                <Setter Property="Foreground" Value="Red" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding SmoothingCountInherited, UpdateSourceTrigger=PropertyChanged}" Value="True">
                        <Setter Property="Foreground" Value="Gray" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="Button" x:Key="sBtnClearUnits" BasedOn="{StaticResource sButtonDefault}">
                <Setter Property="Foreground" Value="Red" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding SmoothingUnitsInherited, UpdateSourceTrigger=PropertyChanged}" Value="True">
                        <Setter Property="Foreground" Value="Gray" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="Button" x:Key="sBtnClearShape" BasedOn="{StaticResource sButtonDefault}">
                <Setter Property="Foreground" Value="Red" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding SmoothingShapeInherited, UpdateSourceTrigger=PropertyChanged}" Value="True">
                        <Setter Property="Foreground" Value="Gray" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <GroupBox Grid.Column="0" Grid.Row="0" Header="Stored Value" Margin="2" Padding="1">
            <StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBox Name="txtValue"
                             Text="{Binding StoredValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource Convert_str_xint}}"
                             Height="25" Width="100"
                             HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                             IsEnabled="{Binding IsChecked, ElementName=btnLock}"
                             ToolTip="Currently stored value. Unlock to edit."
                             PreviewTextInput="PreviewTextInputValue"
                             MaxLength="{Binding MaxDigits}"
                             />
                    <ToggleButton Name="btnLock"  Width="20" Height="20" ToolTip="Unlock to allow manual editing.">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Setter Property="Content" Value="{DynamicResource imgLocked}" />
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Content" Value="{DynamicResource imgUnlocked}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                </StackPanel>
                <TextBox Name="txtDescription" Text="{Binding StoredValueDescription, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Height="25" Width="125" TextWrapping="NoWrap" IsReadOnly="True" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <Button x:Name="btnCapture" Content="Capture" Command="{Binding CmdCapture}" ToolTip="{StaticResource str_ttCaptureSingle}" />
                <Button x:Name="btnRestore" Content="Restore" Command="{Binding CmdRestore}" ToolTip="{StaticResource str_ttRestoreSingle}" />
                <Button x:Name="btnClear" Content="Clear" Command="{Binding CmdClear}" ToolTip="{StaticResource str_ttClearSingle}" />
            </StackPanel>
        </GroupBox>

        <GroupBox Grid.Column="1" Grid.Row="0" Header="Smoothing" Margin="2" Padding="1">
            <Grid IsEnabled="{Binding AllowSmoothing}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBox Name="txtCount" Grid.Row="0" Grid.Column="0" Height="25" Width="125" Text="{Binding SmoothingCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource Convert_str_xint}}" MaxLength="10" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" PreviewTextInput="PreviewTextInputValue" ToolTip="Smoothing count." />
                <TextBox
                    IsHitTestVisible="False"
                    Text="{Binding InheritedSmoothingCount, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Background="{x:Null}"
                    BorderBrush="{x:Null}"
                    >
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Setter Property="Foreground" Value="Gray"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=txtCount}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <!--<TextBlock IsHitTestVisible="False" 
                           Grid.Row="0" Grid.Column="0"
                           VerticalAlignment="Center"
                           Text="{Binding InheritedSmoothingCount, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                           Width="{Binding ElementName=txtCount, Path=ActualWidth}"
                           >
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Setter Property="Foreground" Value="Gray"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=txtCount}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>-->
                <Button x:Name="btnClearCount" Grid.Row="0" Grid.Column="1" Command="{Binding CmdClearCount}" Style="{StaticResource sBtnClearCount}" ToolTip="Revert to inherited value.">X</Button>
                
                <ComboBox Name="cbxUnits" Grid.Row="1" Grid.Column="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" SelectedIndex="{Binding SmoothingUnits, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Smoothing units." >
                    <ComboBoxItem Content="Ticks" />
                    <ComboBoxItem Content="Beats" />
                    <ComboBoxItem Content="Milliseconds" />
                    <ComboBoxItem Content="Seconds" />
                    <ComboBoxItem Content="Minutes" />
                </ComboBox>
                <Button x:Name="btnClearUnits" Grid.Row="1" Grid.Column="1" Command="{Binding CmdClearUnits}" Style="{StaticResource sBtnClearUnits}" ToolTip="Revert to inherited value.">X</Button>
                <ComboBox
                    Name="cbxShape" Height="72"
                    Grid.Row="2" Grid.Column="0"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    VerticalAlignment="Top"
                    SelectedIndex="{Binding SmoothingShape, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ToolTip="Smoothing shape."
                    >
                    <ComboBoxItem Width="90" Height="60">
                        <Image Source="resource/Shape01.png"/>
                    </ComboBoxItem>
                    <ComboBoxItem Width="90" Height="60">
                        <Image Source="resource/Shape02.png"/>
                    </ComboBoxItem>
                    <ComboBoxItem Width="90" Height="60">
                        <Image Source="resource/Shape03.png"/>
                    </ComboBoxItem>
                    <ComboBoxItem Width="90" Height="60">
                        <Image Source="resource/Shape04.png"/>
                    </ComboBoxItem>
                    <ComboBoxItem Width="90" Height="60">
                        <Image Source="resource/Shape05.png"/>
                    </ComboBoxItem>
                    <ComboBoxItem Width="90" Height="60">
                        <Image Source="resource/Shape06.png"/>
                    </ComboBoxItem>
                    <ComboBoxItem Width="90" Height="60">
                        <Image Source="resource/Shape07.png"/>
                    </ComboBoxItem>
                </ComboBox>
                <Button x:Name="btnClearShape" Grid.Row="2" Grid.Column="1" Command="{Binding CmdClearShape}" Style="{StaticResource sBtnClearShape}" ToolTip="Revert to inherited value.">X</Button>
            </Grid>
        </GroupBox>

        <Button Name="btnOkay" Grid.Column="0" Grid.Row="1" IsDefault="True" Click="btnOkay_Click" >OK</Button>
        <Button Name="btnCancel" Grid.Column="1" Grid.Row="1" IsCancel="True" Click="btnCancel_Click" >Cancel</Button>

    </Grid>
</Window>

2023.03.10
	Added Clear button to property dialog
	Improved refresh of tree after capture/clear etc.
	Added images for smoothing shapes
	Property Dialog now shows inherited values for smoothing settings

2023.03.09
	Changed PropertyDialog to modeless and implemented faux-modal behaviour
		Modal dialog blocked entire Buzz UI rather than just Snapshot.
		Moved temp store/restore property state stuff into CSnapshotMachineVM
		Fixed Cancel not triggering update of property DisplayValue in treeview

2023.03.08
	Implemented/fixed various PropertyDialog things.
		Double-click on property now launches the dialog
	Removed 'samples' as a unit option (implies accuracy that isn't possible)
	Added AllowSmoothing to ISmoothable

2023.02.07
	Added machine param for smoothing shape
	Added various things to get the Property dialog working

2023.02.05
	More fixes. Getting there.
	Altered RegisterParamChange() to use param specific smoothing if present
	Removed overrides for smoothing stuff. Smoothing is inherited from parent nodes.
	Fixed update of slot combos on load
	Removed "LOAD" button from manager.
		Made activate button bigger and added ctrl+click to activate and restore.
	Fixed a few exception things

2023.02.04
	Most stuff working, more or less back to where we started.

2023.02.03
	Massive mess update.
		Decided to go back to having a separate VM for each of the three treeviews.
			It makes more sense to have them separate, especially for XAML binding of properties and menus.
		Got a bit carried away and changed lots of stuff without doing source control.
			Things got messy and lots of stuff is somewhat broken but the core is probably better.
			Looking to implement a new system for updating the UI based on individual properties firing events.
				Everything is too complex and messy. Need to find a simple system that will work for everything.


2023.02.01
	Overhaul of treeview XAML
		Reduced duplication by use of data triggers in styles to set bindings dynamically
		Re-fixed broken context menus
			Note to self. Be very careful when reordering XAML for tidyness.

2023.01.31
	Implemented dynamic data template selection for treeviews
		Item templates are now defined in the user control resources.

2023.01.30
	Added snaphot notes
	Improved info text
	Added ISmoothable and implemented for all relevant types and VMs
		count and units are nullable int, so if value is null use machine level setting.

2023.01.29
	Ctrl+Alt+Leftclick on clear all/clear selected now removes data from all slots.
	Added "Remove from all slots" to treeview item context menus
	Changed order of buttons in main tab to match those in manager and adjusted labels
	Moved info text to a separate tab
	Added override to disregard user setting for confirm on clear when removing data from all slots.
	Removed Work() as no longer needed.

2023.01.28
	Adapted code to send param changes out via a worker thread from ThreadPool
		Better for Buzz stability but timing is off.
	Changed to using a dedicated thread with a high priority rather than using ThreadPool.
		Timing seems better but needs more testing.
		Not sure whether the changes are interpolating smoothly. UI for params is steppy.
	Params updates are no longer restricted to once per tick (smooth updates even on low tick resolution)
	Added machine params for smoothing time

2023.01.27
	Began implementation of param smoothing with selectable shape
		Smoothing and shape *seem* to work as expected although haven't checked whether the timing is accurate.
		Time and shape aren't exposed in the UI yet
		Need to experiment with different ways of sending changes as currently Buzz UI freezes during operation
	Fixed broken SlotB restore button (restored SlotA, copy/paste error)

2022.11.18
	param/attrib changes are now stored in lists to be processed by CMachine.Work()
		Added CParamChange and CAttribChange
		Trying to change large numbers of parameters in Work() causes Buzz to freeze if 'Restore on slot change' is enabled,
			Sending them to the main thread to avoid this.
			No idea how this might impact timing of changes.
			Seems to work well enough so far but only tested with a single Qsamo.

2022.11.06
	Added 'Clear selected' button to main tab
	Checked items are no longer hidden by the text filter.
	Added "Activate" button to manager
	Mapping dialog improvements
	Mapping dialog note/controller lists now start at one rather than zero

2022.11.04
	Added CMachinePropertyItemVM
		moves machine specific stuff out of CTreeViewItemVM
		simplifies adding context menu commands to the property group types
	Refactoring to end the checked/selected naming confusion
	Implemented context menu operations for all treeview item types in both main and manager
	Added copy left/right to manager treeview items
	Changed various instances of List<IPropertyState> to HashSet<IPropertyState>
		Doesn't seem to have broken anything so far.
	Machine Command menu now shows a placeholder if there are no slots with data.
	Added load buttons to activate manager left/right panes

2022.11.03
	Implemented context menu for machine properties in main treeview

2022.11.02
	Implemented text based filtering of properties in treeviews
	Implemented machine commands menu

2022.11.01
	Added Show combo to main an manager
		Show stored/empty/all properties in the treeviews
		Added various related properties

2022.10.30
	Implemented renaming slots via slot combos
		Just needed to set "IsTextSearchEnabled" to false to prevent ketpresses from changing the selected item.

2022.10.22
	Version 1.1

2022.10.21
	Fixed copying empty properties (erase in dest)
	Auto expand property groups with values on slot change
	Disable manager copy buttons when both panes show the same slot
	Improved treeview navigation
	Implemented keyboard control of treeview checkboxes
	Fixed "Selection follows slot" broken in last commit
	Fixed manager selection buttons, also broken in last commit
	Fixed incorrect text styles used for manager treeview items
	Added manager buttons to select stored properties
	Improved selection info
	Disabled text input for slot name combo
		The "jump to letter" behaviour changes the active slot as you're typing.
		Need to find a way to disable it.
	Implemented display of parameter value descriptions

2022.10.20
	Added CMachineSnapshot.ClearSelected()
	Added manager buttons and matching commands for A/B operations
	Overhaul of various systems to facilitate operations on different slots
	Completed implementation of manager buttons

2022.10.19
	Implemented copy of empty properties (clear in dest)

2022.10.17
	Fixed incorrect tree structure for track params
	More work on displaying property values
	Implemented copying property values between slots
		Had to restructure quite a bit of stuff to get this working

2022.10.12
	Buttons for manager selection operations
	Started work on displaying property values

2022.10.11
	XAML improvements
		Various treeview/combobox styles and data templates converted to usercontrol resources

2022.10.10
	Manager A/B panes now showing correct state
	Synchronised IsChecked for A/B panes
		Replaced IsCheckedA and IsCheckedB with IsCheckedM

2022.10.06
	Changed constructor arguments for VM objects so everything has a reference to the main CSnapshotMachineVM
	Implemented GotValueA/GotValueB

2022.09.16
	Rethinking how the manager treeviews will work.
		We only have one collection of CMachineStateVM and all three treviews bind to that.
		Still need to work out how to implement separate data sources for the GotValue property
			Worst case we would have to add GotValueA and GotValueB but hopefully we can think of something more elegant.

2022.02.24
	Split ViewModel.cs into separate files. Got tired of scrolling.
	Added CTreeViewVM._stateVM
		Bit ugly but couldn't find a better way to allow tree items to query the reference for GotValue.
	Manager A/B panes work now

2022.02.21
	Reorganised stuff so things are no longer tied to a specific VM

2022.02.20
	Preliminary work on snapshot manager. Branched off due to extreme dodginess.
	Removed CMachineState.VM
		Multiple views are now tied to the same state so this reference to a single VM is no longer useful
	Added members to CSnapshotMachineVM to display list of machines in the two panels of the manager


2022.02.03
	Fixed error due to mismatch between snapshot clear and delegate.

2021.09.23
	Handle machine name/track changes

2021.09.21
	Update machine size info when GUI becomes active
	Display both stored and current data size for data states
	Removed redundant property Size from CPropertyStateVM

2021.09.20
	Prevent confirm on clear prompt during capture

2021.09.19
	Tooltips for most UI buttons
	Added option "Confirm on clear/purge"
	Prevent saving states for deleted machines
	Mapping dialog controls enable/disabled according to selected value in message type combo.
	Possible fix for wde crash report

2021.09.18
	Support for delete/undelete of machines
	Various tweaks
	Added postbuild script. Need to tweak it a bit for 'Any CPU' but it'll do for now.
	Added option 'Selection follows slot'
		On slot change, stored properties are selected while those which aren't are deselected.
	Added buttons for manipulating selection

2021.09.17
	Various UI improvements
		Removed CMidiEvent.MessageType because C# enums are a massive pain in the arse.
	Fixed loading for track params
		Added DisplayName property so params are saved with their correct name rather than the track number

2021.09.16
	Implemented MIDI learn.

2021.09.15
	Implemented core of MIDI mapping system
		MidiMap links Actions to MIDI event settings for UI interaction
		_midiMapping is used to fire Actions in response to actual MIDI events
		Save/load done.
		Implemented MidiNote and MidiControlChange
		Improved code generation for MIDI stuff including note-off handling (packing values with bitwise ops)
		Added MappingDialog
			<ctrl> Right-click on a button (Capture, Restore etc.) to launch
				Holding control signals that the mapping is for a snapshot command

2021.09.13
	Fixed more broken stuff.
	Implemented save/load
		Seems to work but needs more testing

2021.09.12
	Fixing stuff that was broken

2021.09.11
	Complete overhaul. Possibly a bad idea.
		Stored values are now held in a CMachineSnapshot rather than the individual properties
		Quite broken, work in progress.

2021.09.11
	Slot names in combo appear bold if slot has data

2021.09.10
	Implemented save/load to song
	Slot param now follows combo
	Fixed RestoreOnSongLoad
	Prevented auto capture/restore when slot changes due to song load

2021.09.09
	Restore on slot change working
		Added class MachineSnapshot so we can pass all changes to Buzz in one call
			This makes various Restore() methods obsolete but keeping them around in case we go back.

2021.09.07
	Added slot names

2021.09.05
	Treeview items bold when value stored
		Improved GotState for the container types
		Possibly added unnecessary events while floundering around trying to fix treeview update
	Tidying up of inherited stuff
	Fixed Slot off-by-one error 
	Added size data to the information display
		Added various Size and TotalSize properties
		Moved ToSize() method into a new class so we can use it more generally

2021.09.04
	Improved GUI control size stretch/fit etc.
	Removed MachineState.InputStates
		Apparently machine input parameters (amp + pan) can't be set
	Attribute now shown in treeview (duh)
	Fixed a few bugs related to Purge
	Implemented display of machine data size
	Data item is no longer added if machine has no data
	Fixed MachineState being needlessly generated for Snapshot
	Prevent items with no children being checked in UpdateTreeCheck()
	Implemented SelectNewMachines and RestoreOnStop
	Added base class PropertyBase to reduce some of the code duplication
	Started trying to implement slots

2021.09.03
	Implemented Capture, CaptureMissing, Restore, Clear and Purge 

2021.09.02
	Reworked things to handle machine data the same as params and attributes

2021.09.01
	Snapshot no longer appears in the treeview
	Added OnCheckChanged() to update state objects
	Machines default to unchecked
	Ignore params without state flag
	Made things more Interfacey and Eventy
	Track params are now selectable per track.
	Implemented info display

2021.09.30
	Overhaul of treeview related stuff
	Treeview checkboxes working properly although they don't actually do anything yet
		Need to figure out how to connect the state objects. Might need another overhaul :(

2021.09.12
	Getting things going. Starting to look like something that might eventually work.
	Trying to work out save/load